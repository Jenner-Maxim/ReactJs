{"ast":null,"code":"var _jsxFileName = \"/media/maxim/Media/Coding/Javascript/React/firstapp/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\n// 6a1a1a30\n\nimport \"./App.css\";\nimport SearchIcon from \"./search.svg\";\nimport MovieCard from \"./MovieCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://omdbapi.com?apikey=6a1a1a30\";\nconst movies = {\n  Title: \"The Amazing Spiderman 2 Webb Cut\",\n  Year: \"2021\",\n  imdbID: \"tt18351128\",\n  Type: \"movie\",\n  Poster: \"https://m.media-amazon.com/images/M/MV5BYzYzZDViNWYtNWViMS00NDMxLThlN2YtZjFkOWMwODkzNzhiXkEyXkFqcGdeQXVyMTUwMzM4NzU0._V1_SX300.jpg\"\n};\nconst App = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const searchMovies = async title => {\n    const response = await fetch(`${API_URL}&S=${title}`);\n    const data = await response.json();\n    setMovies(data.Search);\n    //console.log(data.Search);\n  };\n\n  useEffect(() => {\n    searchMovies(\"Spiderman\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MovieLand\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"search for movies\",\n        value: \"Superman\",\n        onChange: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: SearchIcon,\n        alt: \"search\",\n        onClick: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), (movies === null || movies === void 0 ? void 0 : movies.length) > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No Movies found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","SearchIcon","MovieCard","jsxDEV","_jsxDEV","API_URL","movies","Title","Year","imdbID","Type","Poster","App","_s","setMovies","searchMovies","title","response","fetch","data","json","Search","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","src","alt","onClick","length","map","movie","_c","$RefreshReg$"],"sources":["/media/maxim/Media/Coding/Javascript/React/firstapp/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n// 6a1a1a30\n\nimport \"./App.css\";\nimport SearchIcon from \"./search.svg\";\nimport MovieCard from \"./MovieCard\";\n\nconst API_URL = \"http://omdbapi.com?apikey=6a1a1a30\";\n\nconst movies = {\n  Title: \"The Amazing Spiderman 2 Webb Cut\",\n  Year: \"2021\",\n  imdbID: \"tt18351128\",\n  Type: \"movie\",\n  Poster:\n    \"https://m.media-amazon.com/images/M/MV5BYzYzZDViNWYtNWViMS00NDMxLThlN2YtZjFkOWMwODkzNzhiXkEyXkFqcGdeQXVyMTUwMzM4NzU0._V1_SX300.jpg\",\n};\n\nconst App = () => {\n  const [movies, setMovies] = useState([]);\n\n  const searchMovies = async (title) => {\n    const response = await fetch(`${API_URL}&S=${title}`);\n    const data = await response.json();\n\n    setMovies(data.Search);\n    //console.log(data.Search);\n  };\n\n  useEffect(() => {\n    searchMovies(\"Spiderman\");\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <h1>MovieLand</h1>\n      <div className=\"search\">\n        <input\n          placeholder=\"search for movies\"\n          value=\"Superman\"\n          onChange={() => {}}\n        />\n        <img src={SearchIcon} alt=\"search\" onClick={() => {}} />\n      </div>\n\n      {\n      movies?.length > 0 ? (\n        <div className=\"container\">\n          {movies.map((movie) => (\n            <MovieCard movie={movie} />\n          ))}\n        </div>\n      ) : (\n        <div className=\"empty\">\n          <h2>No Movies found</h2>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C;;AAEA,OAAO,WAAW;AAClB,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,OAAO,GAAG,oCAAoC;AAEpD,MAAMC,MAAM,GAAG;EACbC,KAAK,EAAE,kCAAkC;EACzCC,IAAI,EAAE,MAAM;EACZC,MAAM,EAAE,YAAY;EACpBC,IAAI,EAAE,OAAO;EACbC,MAAM,EACJ;AACJ,CAAC;AAED,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACP,MAAM,EAAEQ,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMgB,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEb,OAAQ,MAAKW,KAAM,EAAC,CAAC;IACrD,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAElCN,SAAS,CAACK,IAAI,CAACE,MAAM,CAAC;IACtB;EACF,CAAC;;EAEDrB,SAAS,CAAC,MAAM;IACde,YAAY,CAAC,WAAW,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBnB,OAAA;MAAAmB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAClBvB,OAAA;MAAKkB,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrBnB,OAAA;QACEwB,WAAW,EAAC,mBAAmB;QAC/BC,KAAK,EAAC,UAAU;QAChBC,QAAQ,EAAEA,CAAA,KAAM,CAAC;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACnB,eACFvB,OAAA;QAAK2B,GAAG,EAAE9B,UAAW;QAAC+B,GAAG,EAAC,QAAQ;QAACC,OAAO,EAAEA,CAAA,KAAM,CAAC;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACpD,EAGN,CAAArB,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAE4B,MAAM,IAAG,CAAC,gBAChB9B,OAAA;MAAKkB,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBjB,MAAM,CAAC6B,GAAG,CAAEC,KAAK,iBAChBhC,OAAA,CAACF,SAAS;QAACkC,KAAK,EAAEA;MAAM;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACzB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE,gBAENvB,OAAA;MAAKkB,SAAS,EAAC,OAAO;MAAAC,QAAA,eACpBnB,OAAA;QAAAmB,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAK;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAE3B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEV,CAAC;AAACd,EAAA,CAzCID,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AA2CT,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}